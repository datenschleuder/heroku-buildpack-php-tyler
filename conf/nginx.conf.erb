# setting worker_processes to CPU core count
worker_processes      2;
worker_rlimit_nofile 1000;
daemon off;





events {
  worker_connections  1024;
  use epoll;
  multi_accept on;
  
}

http {
  include             mime.types;
  default_type        application/octet-stream;
  sendfile            on;
  server_tokens       off;
  keepalive_timeout   2;
  access_log          off;
  error_log           logs/error.log;
  proxy_max_temp_file_size	0;
  limit_conn_zone $binary_remote_addr zone=phplimit:200m; # define a limit bucket for PHP-FPM
  # don't use server listen port in redirects.
  port_in_redirect off;
  
tcp_nopush on;
tcp_nodelay on;
reset_timedout_connection on;
keepalive_requests 1000;
client_body_timeout 10;
send_timeout 10;

fastcgi_cache_path /app/cache/nginx levels=1:2 keys_zone=microcache:10m max_size=1000m inactive=60m;

  # compress content
  gzip  on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css text/xml application/json application/javascript application/xml application/x-javascript text/javascript application/rss+xml application/atom+xml application/rdf+xml ;


  # set $https only when SSL is actually used.
  map $http_x_forwarded_proto $my_https {
    default off;
    https on;
  }


  server {
    listen            <%= ENV['PORT'] %>;
    server_name       _;
    
    root              /app/public/;
    index             index.php index.html index.htm;
    charset           utf-8;
    

    # Some basic cache-control for static files to be sent to the browser
    location ~* \.(?:ico|css|js|gif|jpeg|jpg|png)$ {
      expires         max;
      add_header      Pragma public;
      add_header      Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Deny hidden files (.htaccess, .htpasswd, .DS_Store).
    location ~ /\. {
      deny            all;
      access_log      off;
      log_not_found   off;
    }

    # Deny /favicon.ico
    location = /favicon.ico {
      access_log      off;
      log_not_found   off;
    }

    # Deny /robots.txt
    location = /robots.txt {
      allow           all;
      log_not_found   off;
      access_log      off;
    }

    # Rewrite rule adapted for Zend Framework
    location / {
        allow           all;
        if (!-f $request_filename) {
            rewrite ^(.*)$ /index.php last;
        }
    }

    include /app/conf/nginx.d/*.conf;
    
    
  
    

    location ~ .*\.php$ {
    
      try_files $uri =404;
      limit_conn phplimit 300; # limit to 100 concurrent users to PHP per IP.
      include         fastcgi_params;
      
        ##
        # Fastcgi cache
        ##
        set $skip_cache 1;
          if ($cache_uri != "null cache") {
            add_header X-Cache-Debug "$cache_uri $cookie_nocache $arg_nocache$arg_comment $http_pragma $http_authorization";
        set $skip_cache 0;
        }
        
    fastcgi_cache_bypass $skip_cache;
    fastcgi_cache microcache;
    fastcgi_cache_key $scheme$host$request_uri$request_method;
    fastcgi_cache_valid any 8m;
    fastcgi_cache_use_stale updating;
    fastcgi_cache_bypass $http_pragma;
    fastcgi_cache_use_stale updating error timeout invalid_header http_500;
    
    
      
      fastcgi_buffer_size 128k;
      fastcgi_buffers 256 4k;
      fastcgi_busy_buffers_size 256k;
      fastcgi_temp_file_write_size 256k;
      
      fastcgi_param   HTTPS $my_https if_not_empty;
      fastcgi_pass    unix:/tmp/php-fpm.sock;
      fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
      
      fastcgi_cache MYAPP;
        fastcgi_cache_valid 200 20m;
      
    }
    
    
    
  }
}
